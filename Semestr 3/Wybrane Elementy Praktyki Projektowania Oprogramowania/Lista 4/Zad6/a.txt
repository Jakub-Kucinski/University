1. (1p) Węzeł drzewa binarnego (Tree) to obiekt który przechowuje referencje do swojegolewego i prawego syna oraz wartość (np. liczba lub napis). Pokazać jak zdefiniować funkcjękonstruktorową tworzącą taki węzeł (argumentami funkcji powinny być właśnie: lewe iprawe poddrzewo oraz wartość węzła). Pokazać przykład użycia tej funkcji do utworzeniainstancji drzewa o głębokości 3 (nie musi być to drzewo pełne).
2. (1p) Do prototypu funkcji drzewa binarnego z poprzedniego przykładu dodać iterator(zaimplementowany jako generator przy użyciuyield), który pozwoli napisać
3. (1p) Na dowolnym przykładzie zademonstrować jak można uzyskać efekt ”składowychprywatnych” znany z wielu języków obiektowych.Formalnie: zdefiniować funkcję konstruktorowąFoo, do jej prototypu dodać metodę pu-blicznąBar, którą można zawołać na nowo tworzonych instancjach obiektów, ale w cielefunkcjiBarzawołać funkcjęQuxktóra jest funkcją prywatną dla instancji tworzonych przezFoo(czyli że funkcjiQuxnie da się zawołać ani wprost na instancjachFooani w żadeninny sposób niż tylko z wewnątrz metody publicznejBar).
4. (1p) Zademonstrować w praktyce tworzenie własnych modułów oraz ich włączanie dokodu za pomocąrequire. Czy możliwa jest sytuacja w której dwa moduły tworzą cykl(odwołują się do siebie nawzajem)? Jeśli nie - wytłumaczyć dlaczego, jeśli tak - pokazaćprzykład implementacji.
5. (1p) Napisać program, który wypisze na ekranie zapytanie o imię użytkownika, odczyta zkonsoli wprowadzony tekst, a następnie wypiszeWitaj ***gdzie puste miejsce zostaniewypełnione wprowadzonym przez użytkownika napisem. Użyć dowolnej techniki do speł-nienia tego wymagania, ale nie korzystać z zewnętrznych modułów znpma wyłącznie zobiektów z biblioteki standardowej (wszystkie te techniki sprowadzają się do jakiejś formydojścia do strumieniaprocess.stdin).
6. (1p) Napisać program używający modułu (fs), który przeczyta w całości plik tekstowy anastępnie wypisze jego zawartość na konsoli.
