"0","n = 1000"
"0","sigma = 1.0"
"0","beta = c(3, 3, 3, 3, 3, rep(0, 945))"
"0",""
"0","significance = 0.1"
"0","nvars = c(20, 100, 500, 950)"
"0","nmodels = length(nvars)"
"0","n_experiments = 100"
"0",""
"0","names_of_columns = c(""ncols"", ""criterion"", ""FD"", ""TD"", ""power"", ""FDR"", ""SE"")"
"0","task4 = data.frame(matrix(ncol=length(names_of_columns), nrow=0))"
"0","colnames(task4) = names_of_columns"
"0",""
"0","criteria = list(ric, bic, aic, mbic, mbic2)"
"0","criteria_strings = c(""ric"", ""bic"", ""aic"", ""mbic"", ""mbic2"")"
"0",""
"0",""
"0","for (i in 1:nmodels){"
"0","  p = nvars[i]"
"0","  for (j in 1:length(criteria)){"
"0","    truedisc = matrix(0, n_experiments)"
"0","    falsedisc = matrix(0, n_experiments)"
"0","    power = matrix(0, n_experiments)"
"0","    se = matrix(0, n_experiments)"
"0","    for (i_exp in 1:n_experiments){"
"0","      X = matrix(rnorm(950000, 0, 1.0/sqrt(1000)), n, 950)"
"0","      e = rnorm(n)"
"0","      Y = X %*% beta + e"
"0","      Xi = X[, 1:p]"
"0","      d=prepare_data(Y,Xi, verbose = FALSE)"
"0","      model = fast_forward(d, crit=criteria[[j]])"
"0","      result = compute_stats(model, beta[1:p])"
"0","      FD = result[1]"
"0","      TD = result[2]"
"0","      pow = result[3]"
"0","      SE = result[4]"
"0","      truedisc[i_exp] = TD"
"0","      falsedisc[i_exp] = FD"
"0","      power[i_exp] = pow"
"0","      se[i_exp] = SE"
"0","    }"
"0","    task4[nrow(task4) + 1,] = c(p, criteria_strings[j], mean(falsedisc), mean(truedisc), mean(power), fdr(truedisc, falsedisc), mean(se))"
"0","  }"
"0","}"
"0","task4"
